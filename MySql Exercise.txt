Query 1:
 Create a Table jobs, and check one of it column max_salary amount exceeding the upper limit 25000
create table jobs(
    -> job_id varchar(10) not null,
    -> job_title varchar(35) not null,
    -> min_salary decimal(6,0),
    -> max_salary decimal(6,0)
    -> check(max_salary <= 25000)
    -> );
mysql> desc jobs;
+------------+--------------+------+-----+---------+-------+
| Field      | Type         | Null | Key | Default | Extra |
+------------+--------------+------+-----+---------+-------+
| job_id     | varchar(10)  | NO   |     | NULL    |       |
| job_title  | varchar(35)  | NO   |     | NULL    |       |
| min_salary | decimal(6,0) | YES  |     | NULL    |       |
| max_salary | decimal(6,0) | YES  |     | NULL    |       |
+------------+--------------+------+-----+---------+-------+
4 rows in set (0.00 sec)


Query 2:
 Create a table named countries including columns country_id, country_name and region_id and make sure that no countries except Italy, India and China will be entered in the table
mysql> create table countries(
    -> country_id varchar(3),
    -> country_name varchar(40),
    -> check(country_name in ('Italy','India','China')),
    -> region_id decimal(10,0)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> desc countries;
+--------------+---------------+------+-----+---------+-------+
| Field        | Type          | Null | Key | Default | Extra |
+--------------+---------------+------+-----+---------+-------+
| country_id   | varchar(3)    | YES  |     | NULL    |       |
| country_name | varchar(40)   | YES  |     | NULL    |       |
| region_id    | decimal(10,0) | YES  |     | NULL    |       |
+--------------+---------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

Query 3:
 Create table named job_history including columns employee_id, start_date, end_date, job_id and department_id and make sure that the value against column end_date will be entered at the time of insertion to the format like '--/--/----'0
mysql> create table job_history(
    -> employee_id decimal(6,0) NOT NULL,
    -> START_DATE date NOT NULL,
    -> END_DATE date NOT NULL
    -> CHECK(END_DATE LIKE '--/--/----'),
    -> JOB_ID varchar(10) NOT NULL,
    -> DEPARTMENT_ID decimal(4,0) NOT NULL
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> desc job_history;
+---------------+--------------+------+-----+---------+-------+
| Field         | Type         | Null | Key | Default | Extra |
+---------------+--------------+------+-----+---------+-------+
| employee_id   | decimal(6,0) | NO   |     | NULL    |       |
| START_DATE    | date         | NO   |     | NULL    |       |
| END_DATE      | date         | NO   |     | NULL    |       |
| JOB_ID        | varchar(10)  | NO   |     | NULL    |       |
| DEPARTMENT_ID | decimal(4,0) | NO   |     | NULL    |       |
+---------------+--------------+------+-----+---------+-------+
5 rows in set (0.00 sec)

Query 4:
 Create a table named countries indcluding columns country_id, country_name and region_id and make sure that no duplicate data against column_id will be allowed at the time of insertion.
mysql> create table countries(
    -> country_id varchar(3) NOT NULL,
    -> country_name varchar(40) NOT NULL,
    -> region_id decimal(10,0) NOT NULL,
    -> UNIQUE(country_id)
    -> );
Query OK, 0 rows affected (0.02 sec)
mysql> desc countries;
+--------------+---------------+------+-----+---------+-------+
| Field        | Type          | Null | Key | Default | Extra |
+--------------+---------------+------+-----+---------+-------+
| country_id   | varchar(3)    | NO   | PRI | NULL    |       |
| country_name | varchar(40)   | NO   |     | NULL    |       |
| region_id    | decimal(10,0) | NO   |     | NULL    |       |
+--------------+---------------+------+-----+---------+-------+
3 rows in set (0.01 sec)

Query 5:
 Create a table named jobs including columns job_id, job_title, min_salary and max_salary and make sure that,the default value for job_title is blank and min_salary is 8000 and max_salary is NULL
will be entered automatically at the time of insertion if no value assigned for the specified columns.
mysql> create table jobs(
    -> job_id varchar(10) NOT NULL UNIQUE,
    -> job_title varchar(35) NOT NULL DEFAULT ' ',
    -> MIN_SALARY decimal(6,0) DEFAULT 8000,
    -> MAX_SALARY decimal(6,0) DEFAULT NULL
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> desc jobs;
+------------+--------------+------+-----+---------+-------+
| Field      | Type         | Null | Key | Default | Extra |
+------------+--------------+------+-----+---------+-------+
| job_id     | varchar(10)  | NO   | PRI | NULL    |       |
| job_title  | varchar(35)  | NO   |     |         |       |
| MIN_SALARY | decimal(6,0) | YES  |     | 8000    |       |
| MAX_SALARY | decimal(6,0) | YES  |     | NULL    |       |
+------------+--------------+------+-----+---------+-------+
4 rows in set (0.00 sec)

Query 6:
 Create a table named countries including columns country_id, country_name and region_id and make sure that the country_id column will be a key field which will not certain any duplicate data at the time of insertion.
mysql> create table countries(
    -> country_id varchar(2) NOT NULL UNIQUE PRIMARY KEY,
    -> country_name varchar(40) NOT NULL,
    -> region_id decimal(10,0) NOT NULL
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> desc countries;
+--------------+---------------+------+-----+---------+-------+
| Field        | Type          | Null | Key | Default | Extra |
+--------------+---------------+------+-----+---------+-------+
| country_id   | varchar(2)    | NO   | PRI | NULL    |       |
| country_name | varchar(40)   | NO   |     | NULL    |       |
| region_id    | decimal(10,0) | NO   |     | NULL    |       |
+--------------+---------------+------+-----+---------+-------+
3 rows in set (0.01 sec)

Query 7:
 Create table countries including columns country_id, country_name and region_id and make sure that the column country_id will be unique and store an auto incremented value.
mysql> create table countries(
    -> COUNTRY_ID int NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,
    -> COUNTRY_NAME varchar(40) NOT NULL,
    -> REGION_ID decimal(10,0) NOT NULL
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> desc countries;
+--------------+---------------+------+-----+---------+----------------+
| Field        | Type          | Null | Key | Default | Extra          |
+--------------+---------------+------+-----+---------+----------------+
| COUNTRY_ID   | int           | NO   | PRI | NULL    | auto_increment |
| COUNTRY_NAME | varchar(40)   | NO   |     | NULL    |                |
| REGION_ID    | decimal(10,0) | NO   |     | NULL    |                |
+--------------+---------------+------+-----+---------+----------------+
3 rows in set (0.01 sec)

Query 8:
 Create table countries including columns country_id, country_name and region_id and make sure that the combination of columns country_id and region_id will be unique.
mysql> create table countries(
    -> COUNTRY_ID varchar(2) NOT NULL UNIQUE DEFAULT '',
    -> COUNTRY_NAME varchar(40) DEFAULT NULL,
    -> REGION_ID decimal(10,0) NOT NULL,
    -> PRIMARY KEY (COUNTRY_ID, REGION_ID)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> desc countries;
+--------------+---------------+------+-----+---------+-------+
| Field        | Type          | Null | Key | Default | Extra |
+--------------+---------------+------+-----+---------+-------+
| COUNTRY_ID   | varchar(2)    | NO   | PRI |         |       |
| COUNTRY_NAME | varchar(40)   | YES  |     | NULL    |       |
| REGION_ID    | decimal(10,0) | NO   | PRI | NULL    |       |
+--------------+---------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

Query 9:
 Create a table job_history including columns employee_id, start_date, end_date, job_id and department_id and make sure that, the employee_id column 
does not contain any duplicate value at the time of insertion and the foreign key column job_id contain only those values which are exists in the jobs table.
mysql> create table job_history(
    -> EMPLOYEE_ID decimal(6,0) NOT NULL PRIMARY KEY,
    -> START_DATE date NOT NULL,
    -> END_DATE date NOT NULL,
    -> JOB_ID varchar(10) NOT NULL,
    -> DEPARTMENT_ID decimal(4,0) DEFAULT NULL,
    -> FOREIGN KEY (JOB_ID) REFERENCES jobs(JOB_ID)
    -> )ENGINE = INNODB;
Query OK, 0 rows affected (0.03 sec)

mysql> desc job_history;
+---------------+--------------+------+-----+---------+-------+
| Field         | Type         | Null | Key | Default | Extra |
+---------------+--------------+------+-----+---------+-------+
| EMPLOYEE_ID   | decimal(6,0) | NO   | PRI | NULL    |       |
| START_DATE    | date         | NO   |     | NULL    |       |
| END_DATE      | date         | NO   |     | NULL    |       |
| JOB_ID        | varchar(10)  | NO   | MUL | NULL    |       |
| DEPARTMENT_ID | decimal(4,0) | YES  |     | NULL    |       |
+---------------+--------------+------+-----+---------+-------+
5 rows in set (0.01 sec)

Query 10:
 Create table employees including columns employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, commission, manager_id and department_id and 
make sure that, the employee_id column does not contain any duplicate value at the time of insertion and the foreign key columns combined by department_id and manager_id columns
contain only those unique combination values, which combinations are exists in the departments table.
mysql> create table departments(
    -> DEPARTMENT_ID decimal(4,0) NOT NULL,
    -> DEPARTMENT_NAME varchar(30) NOT NULL,
    -> MANAGER_ID decimal(6,0) NOT NULL,
    -> LOCATION_ID decimal(4,0)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> create table employees(
    -> EMPLOYEE_ID decimal(6,0) NOT NULL PRIMARY KEY,
    -> FIRST_NAME varchar(20) DEFAULT NULL,
    -> LAST_TIME varchar(25) NOT NULL,
    -> EMAIL varchar(25) NOT NULL,
    -> PHONE_NUMBER varchar(20) DEFAULT NULL,
    -> HIRE_DATE date NOT NULL,
    -> JOB_ID varchar(10) NOT NULL,
    -> SALARY decimal(8,2) DEFAULT NULL,
    -> COMMISSION_PCT decimal(2,2) DEFAULT NULL,
    -> MANAGER_ID decimal(6,0) DEFAULT NULL,
    -> DEPARTMENT_ID decimal(4,0) DEFAULT NULL,
    -> FOREIGN KEY(DEPARTMENT_ID, MANAGER_ID)
    -> REFERENCES departments(DEPARTMENT_ID, MANAGER_ID)
    -> );

MySql Insert Into Statement
Query 11:
  Insert a record with your own value into the table countries against each columns
mysql> INSERT INTO countries(COUNTRY_ID, COUNTRY_NAME, REGION_ID)
    -> VALUES ('c1', 'INDIA', 1001);
Query OK, 1 row affected (0.01 sec)

mysql> select * from countries;
+------------+--------------+-----------+
| COUNTRY_ID | COUNTRY_NAME | REGION_ID |
+------------+--------------+-----------+
| c1         | INDIA        |      1001 |
+------------+--------------+-----------+
1 row in set (0.00 sec)

Query 12:
 Insert one row into the table countries against the column country_id and country_name.
mysql> create table countries(
    -> COUNTRY_ID varchar(2) NOT NULL UNIQUE PRIMARY KEY,
    -> COUNTRY_NAME varchar(40) NOT NULL
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> INSERT INTO countries(COUNTRY_ID, COUNTRY_NAME)
    -> VALUES ('c1', 'India');
Query OK, 1 row affected (0.00 sec)

mysql> select * from countries;
+------------+--------------+
| COUNTRY_ID | COUNTRY_NAME |
+------------+--------------+
| c1         | India        |
+------------+--------------+
1 row in set (0.00 sec)

Query 13:
 Create duplicate of countries table named country_new with all structure and data.
mysql> create table if not exists country_new
    -> as select * from countries;
Query OK, 1 row affected (0.03 sec)
Records: 1  Duplicates: 0  Warnings: 0

mysql> select * from country_new;
+------------+--------------+
| COUNTRY_ID | COUNTRY_NAME |
+------------+--------------+
| c1         | India        |
+------------+--------------+
1 row in set (0.00 sec)

Query 14:
 Insert NULL values against region_id column for a row of countries table.
mysql> INSERT INTO countries(COUNTRY_ID, COUNTRY_NAME, REGION_ID) VALUES('c1', 'India', NULL);
Query OK, 1 row affected (0.00 sec)

mysql> select * from countries;
+------------+--------------+-----------+
| COUNTRY_ID | COUNTRY_NAME | REGION_ID |
+------------+--------------+-----------+
| c1         | India        | NULL      |
+------------+--------------+-----------+
1 row in set (0.00 sec)

Query 15:
 Insert 3 rows by a single insert statement.
mysql> create table countries(
    -> country_id varchar(200),
    -> country_name varchar(40),
    -> region_id decimal(10,0)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> insert into countries values('c001', 'India', 1001), ('c002', 'USA', 1007), ('c003', 'UK', 1003);
Query OK, 3 rows affected (0.00 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> select * from countries;
+------------+--------------+-----------+
| country_id | country_name | region_id |
+------------+--------------+-----------+
| c001       | India        |      1001 |
| c002       | USA          |      1007 |
| c003       | UK           |      1003 |
+------------+--------------+-----------+
3 rows in set (0.00 sec)

Query 16:
 Insert rows from country_new table to countries table.
mysql> create table country_new(
    -> country_id varchar(200),
    -> country_name varchar(40),
    -> region_id decimal(10,0)
    -> );
Query OK, 0 rows affected (0.02 sec)
mysql> create table countries(
    -> country_id varchar(200),
    -> country_name varchar(40),
    -> region_id decimal(10,0)
    -> );
Query OK, 0 rows affected (0.02 sec)
mysql> insert into country_new values('c001', 'India', 1001), ('c002', 'USA', 1007), ('c003', 'UK', 1003);
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> select * from country_new;
+------------+--------------+-----------+
| country_id | country_name | region_id |
+------------+--------------+-----------+
| c001       | India        |      1001 |
| c002       | USA          |      1007 |
| c003       | UK           |      1003 |
+------------+--------------+-----------+
3 rows in set (0.00 sec)

mysql> select * from countries;
Empty set (0.00 sec)

mysql> INSERT INTO countries
    -> SELECT * FROM country_new;
Query OK, 3 rows affected (0.00 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> select * from countries;
+------------+--------------+-----------+
| country_id | country_name | region_id |
+------------+--------------+-----------+
| c001       | India        |      1001 |
| c002       | USA          |      1007 |
| c003       | UK           |      1003 |
+------------+--------------+-----------+
3 rows in set (0.00 sec)

Query 17:
Insert one row in jobs table to ensure that no duplicate value will be entered in the job_id column.
mysql> create table jobs(
    -> job_id int NOT NULL UNIQUE,
    -> job_title varchar(35) NOT NULL,
    -> min_salary decimal(6,0)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> INSERT INTO jobs VALUES(1001, 'OFFICER', 8000);
Query OK, 1 row affected (0.01 sec)

mysql> select * from jobs;
+--------+-----------+------------+
| job_id | job_title | min_salary |
+--------+-----------+------------+
|   1001 | OFFICER   |       8000 |
+--------+-----------+------------+
1 row in set (0.00 sec)

Query 18:
 Insert a record into the table countries to ensure that, a country_id and region_id combination will be entered once in the table.
mysql> create table countries(
    -> country_id int NOT NULL,
    -> country_name varchar(40) NOT NULL,
    -> region_id int NOT NULL,
    -> PRIMARY KEY(country_id, region_id)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> INSERT INTO COUNTRIES VALUES(501, 'India', 185);
Query OK, 1 row affected (0.01 sec)

mysql> select * from countries;
+------------+--------------+-----------+
| country_id | country_name | region_id |
+------------+--------------+-----------+
|        501 | India        |       185 |
+------------+--------------+-----------+
1 row in set (0.00 sec)

Query 19:
 Insert records into the table countries in which the country_id column will be unique and auto incremented and the country_name will be filled up by 'N/A' if no value assigned.
mysql> create table countries(
    -> country_id int NOT NULL AUTO_INCREMENT PRIMARY KEY,
    -> country_name varchar(40) NOT NULL DEFAULT 'N/A',
    -> region_id int NOT NULL);
Query OK, 0 rows affected (0.02 sec)

mysql> INSERT INTO countries VALUES(501, 'India', 102);
Query OK, 1 row affected (0.01 sec)

mysql> select * from countries;
+------------+--------------+-----------+
| country_id | country_name | region_id |
+------------+--------------+-----------+
|        501 | India        |       102 |
+------------+--------------+-----------+
1 row in set (0.00 sec)

Query 20:
 Insert rows in the job_history table in which one column job_id is containing those values which are exists in job_id column of jobs table.
mysql> create table department(
    -> department_id int NOT NULL UNIQUE,
    -> department_name varchar(30) NOT NULL,
    -> manager_id int DEFAULT NULL,
    -> location_id int DEFAULT NULL,
    -> PRIMARY KEY(department_id)
    -> )ENGINE = InnoDB;
Query OK, 0 rows affected (0.02 sec)

mysql> INSERT INTO department VALUES(60, 'SALES', 201, 89), (61, 'ACCOUNTS', 201, 89);
Query OK, 2 rows affected (0.01 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> select * from department;
+---------------+-----------------+------------+-------------+
| department_id | department_name | manager_id | location_id |
+---------------+-----------------+------------+-------------+
|            60 | SALES           |        201 |          89 |
|            61 | ACCOUNTS        |        201 |          89 |
+---------------+-----------------+------------+-------------+
2 rows in set (0.00 sec)

mysql> create table jobs(
    -> job_id int NOT NULL UNIQUE PRIMARY KEY,
    -> job_title varchar(35) NOT NULL DEFAULT ' ',
    -> MIN_SALARY decimal(6,0) DEFAULT 8000,
    -> MAX_SALARY decimal(6,0) DEFAULT 20000);
Query OK, 0 rows affected (0.03 sec)

mysql>
mysql> INSERT INTO jobs(job_id, job_title) VALUES(1001, 'OFFICER'), (1002, 'CLERK');
Query OK, 2 rows affected (0.01 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> select * from jobs;
+--------+-----------+------------+------------+
| job_id | job_title | MIN_SALARY | MAX_SALARY |
+--------+-----------+------------+------------+
|   1001 | OFFICER   |       8000 |      20000 |
|   1002 | CLERK     |       8000 |      20000 |
+--------+-----------+------------+------------+
2 rows in set (0.00 sec)

mysql> create table employees(
    -> employee_id int NOT NULL PRIMARY KEY,
    -> first_name varchar(20) DEFAULT NULL,
    -> last_name varchar(25) NOT NULL,
    -> department_id int DEFAULT NULL,
    -> FOREIGN KEY(department_id) REFERENCES departments(department_id),
    -> job_id int NOT NULL,
    -> FOREIGN KEY(job_id) REFERENCES jobs(job_id),
    -> salary decimal(8,2) DEFAULT NULL
    -> );
ERROR 1824 (HY000): Failed to open the referenced table 'departments'
mysql> create table employees(
    -> employee_id int NOT NULL PRIMARY KEY,
    -> first_name varchar(20) DEFAULT NULL,
    -> last_name varchar(25) NOT NULL,
    -> department_id int DEFAULT NULL,
    -> FOREIGN KEY(department_id) REFERENCES department(department_id),
    -> job_id int NOT NULL,
    -> FOREIGN KEY(job_id) REFERENCES jobs(job_id),
    -> salary decimal(8,2) DEFAULT NULL
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> insert into employees values(510, 'Alex', 'Hanes', 60, 1001, 18000);
Query OK, 1 row affected (0.01 sec)

mysql> select * from employees;
+-------------+------------+-----------+---------------+--------+----------+
| employee_id | first_name | last_name | department_id | job_id | salary   |
+-------------+------------+-----------+---------------+--------+----------+
|         510 | Alex       | Hanes     |            60 |   1001 | 18000.00 |
+-------------+------------+-----------+---------------+--------+----------+
1 row in set (0.00 sec)

mysql> insert into employees values(511, 'Tom', 'Elan', 60, 1003, 22000);
ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails (`practice`.`employees`, CONSTRAINT `employees_ibfk_2` FOREIGN KEY (`job_id`) REFERENCES `jobs` (`job_id`))